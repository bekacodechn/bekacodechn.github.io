const l={},a={},$=(e,o)=>e==="/"?`/${o}`:`${e}/${o}`,m=e=>{const{base:o,routes:r}=e;return r.map(n=>{typeof n=="string"&&(n={text:n,link:n,todo:!1});let{text:t,link:s,todo:c}=n;return t=t||s,t=c?`\u3010TODO\u3011 ${t}`:t,{text:t,link:$(o,s)}})},j=e=>{let{base:o,routes:r,nav:n}=e;const t=Object.entries(r),s=t[0][1][0],c=typeof s=="string"?s:s.link,f={text:n,link:$(o,c),activeMatch:o==="/"?"^/$":`\\${o}/`},u=t.map(([i,g])=>{const p=m({base:o,routes:g});return{text:i,items:p}});return{sidebarRoute:{[o]:u},navRoute:f}},b=e=>(typeof e=="string"&&(e={link:e}),e.todo=!0,e),y=(e,o)=>{e=e.replace(/\.md$/,"");let r=e.split("/").slice(0,-1);if(a[r.join("/")])return a[r.join("/")];const n=()=>{if(r.length===0)return null;const s=r.join("/"),c=o[s];return c||(r.pop(),n())},t=n();return a[r.join("/")]=t,t},h=(e,o)=>{let r=l.readdirSync(e,{recursive:!0,encoding:"utf-8"});return r=r.filter(n=>n.endsWith(".md")),r.reduce((n,t)=>{const s=l.join(e,t),c=l.readFileSync(s,"utf-8"),u=/^\s*\#\s*(.+)\s*/.exec(c),i=(u==null?void 0:u[1])||`\u3010--\u7F3A\u5C11-\u6807\u9898--\u3011: ${t}`;if(t=t.replace(/\.md$/,""),!t.split("/").slice(0,-1).join("/"))return console.error(`\u8DEF\u5F84\u9519\u8BEF: ${t}`),n;const d=y(t,o);return n[d]||(n[d]=[]),n[d].push({link:t,text:i}),n},{})};export{j as buildRoutes,b as buildTodoLink,h as generateRoutes};
